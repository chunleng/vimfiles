# Snippets

# ERD

snippet __erd_new "A new template for ERD diagram" b
@startuml
' https://plantuml.com/ie-diagram
title ${1:Title}

' hide the spot
hide circle

' avoid problems with angled crows feet
skinparam linetype ortho

entity owner {
	ðŸ”‘id: number
	--
	* age: number
	* weight: decimal
}

entity animal {
	ðŸ”‘id: number
	--
	* owner_id: number <<FK>>
	* not_null: text
	null: text
	default: number (default: 0)
}

owner ||-ri-o{ animal

' }|--o| Cardinality and Optionality
' ||-ri-|| With direction: up/do/le/ri
@enduml
endsnippet

snippet __erd_table "Template for table" b
entity ${1:table_name} {
	ðŸ”‘id: number
	--
	${2:* owner_id: number <<FK>>
	* not_null: text
	null: text
	ddefault: number (default: 0)}
}
endsnippet

# Sequence Diagram

snippet __sequence_new "A new template for sequence diagram" b
@startuml
' https://plantuml.com/sequence-diagram
title ${1:Title}

participant participant1
actor actor1
boundary boundary1
control control1
entity entity1
database database1
queue queue1

participant1 -> actor1 : To actor
note right
	Multi-line
	notes
end note

alt case x
	participant1 -> boundary1 : To boundary
else case y
	participant1 -> control1 : To control
end

loop 100 times
	participant1 -> entity1 : To entity
end

participant1 -> database1 : To database
ref over participant1, actor1: some method
activate participant1
participant1 -> queue1 : To queue
return 1

' Other way to place note and ref
' note right: message
' note across: message
@enduml
endsnippet

# State Diagram

snippet __state_new "A new template for state diagram" b
@startuml
' https://plantuml.com/state-diagram
title ${1:Title}

hide empty description

state drive {
	[*] --> straight
	straight -ri-> right : [Steering wheel turn right]
	right -le-> straight
	straight -le-> left
	left -ri-> straight
	straight --> [*]

	left : entry: turn wheel left
	left : do: spin the engine
	left : exit: turn wheel straight
}

note top of drive
	Watch where you're going!
end note

[*] --> stop
stop -ri-> drive
drive -le-> stop
stop -do-> [*]

' -ri-> With direction: up/do/le/ri
@enduml
endsnippet

# Flowchart

snippet __flowchart_new "A new template for flowchart" b
@startuml
' https://plantuml.com/activity-diagram-beta
title Title

' for vertical ifs
!pragma useVerticalIf on

start
:Task 1;
if (Condition) then (true)
	:Task 2;
else (no)
	:Task 3;
endif

while (Condition)
    :Task 4;
endwhile

fork
    :Task 5;
fork again
    :Task 6;
    note right: Comment
endfork
' Use below to merge the fork
' end merge
stop
@enduml
endsnippet

snippet __c4model_context_new "A new template for C4 Model Context" b
@startuml
' https://github.com/plantuml-stdlib/C4-PlantUML
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Disable type labels
HIDE_STEREOTYPE()

title ${1:Title}

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/angular.puml
!include DEVICONS/java.puml
!include FONTAWESOME/users.puml


Person(user, "Customer", "People that need products", $sprite="users", $link="https://www.example.com")
System(spa, "SPA", "The main interface that the customer interacts with", $sprite="angular", $link="https://example.com")
System(api, "API", "Handles all business logic", $sprite="java")
SystemDb(db, "Database", "Holds product, order and invoice information", $sprite="img:https://uploads-ssl.webflow.com/5d1126db676120bb4fe43762/62d039f9fba316adad74afba_5ef3ad326275f228a47ff6af_sqlserver.png{scale=0.15}")

Rel(user, spa, "Uses", "https")
BiRel(spa, api, "Uses", "https")
Rel_R(api, db, "Reads/Writes")

SHOW_LEGEND()
@enduml
endsnippet
