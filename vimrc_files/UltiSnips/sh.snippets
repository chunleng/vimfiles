# Snippets

snippet #! "Run declaration" b
#!/bin/bash

set -eu

$0
endsnippet

snippet if "If statement" b
if [ ${1:expr} ]; then
	${2:${VISUAL}}$0
fi
endsnippet

snippet for "For statement" b
for ${1:i} in ${2:{1..10}}; do
	${3:${VISUAL}}$0
done
endsnippet

snippet while "While statement" b
while [ ${1:expr} ]; do
	${2:${VISUAL}}$0
done
endsnippet

snippet _default_variable "Declare variable if not already set" b
: ${${1:VAR_NAME}="${2:value}"}
endsnippet

snippet _getopts "Template for options reading" b
show_usage(){
	cat << EOF
${3:Name of Application}, v${4:1.0}
${0:[Description of application here]}

usage: \$0 [-options] non-options-value

Where options include:
`!p
if t[1] == "h":
	snip += "  -h          show this help"
	snip += ""
else:
	snip.rv += ""
``!p
try:
	snip.rv += ""

	i=0
	while i < len(t[2]):
		tmp = "  -" + t[2][i]
		if i != len(t[2])-1 and t[2][i+1] == ':':
			tmp += " <value>"
			i += 1
		else:
			tmp += "        "
		tmp += "  [Description of this option]"
		snip += tmp
		i+=1
except:
	exit
`
EOF
}

# initialize getopts index
OPTIND=1

while getopts ":${1:h}${2:a:bc:}" opt; do
	case "$opt" in`!p
try:
	snip.shift(2)
	if t[1] == "h":
		snip += "h)"
		snip.shift(1)
		snip += "show_usage"
		snip += "exit"
		sip += ";;"
	else:
		snip.rv += ""
except:
	exit
``!p
try:
	snip.shift(2)
	snip.rv += ""

	i=0
	while i < len(t[2]):
		snip += t[2][i] + ")"
		snip.shift(1)
		if i != len(t[2])-1 and t[2][i+1] == ':':
			snip += "echo \"" + t[2][i] + " ${OPTARG}\""
			i += 1
		else:
			snip += "echo \"" + t[2][i] + "\""
		snip += ";;"
		i+=1
		snip.unshift(1)
except:
	exit
`
		\?)
			echo "Unknown option: -$OPTARG" >&2;
			show_usage
			exit
			;;
		:)
			echo "Missing option argument for -$OPTARG" >&2
			show_usage
			exit
			;;
	esac
done

shift \$((OPTIND-1))

# For removing double dash in option
test "\$1" = "--" && shift
endsnippet

snippet _app_path "Command to retrieve directory of script no matter where it is called from" b
APP_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}"  )" && pwd  )"
endsnippet

snippet _direnv_virtualenv_setting "Command to auto virtualenv when entering a folder" b
export VIRTUAL_ENV=\`pwd\`/.venv
export PATH=$VIRTUAL_ENV/bin:$PATH
endsnippet
