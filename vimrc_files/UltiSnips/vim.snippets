# Snippets

snippet if "If statement" b
if ${1:expr}
	${2:# if expr is true}
endif
endsnippet

snippet __fold "Fold for vim" b
" ${1} `!p snip.rv = "-" * (70 - len(t[1]))` {{{
${0:${VISUAL}}
" }}}
endsnippet

snippet __vim_test "Setup for vimtest" b
" https://github.com/vim-test/vim-test#features
let test#${1:<language>}#runner = '${2:<runner>}'
${3:let test#$1#$2#executable = '${4:path/to/executable}'}
endsnippet

snippet __autocommand_new "Template for commonly used autocommand" b
augroup ${1:group_name}
	autocmd!
	autocmd FileType ${2:filetype} setlocal noet
	autocmd BufWinEnter *.${3:ext} set local noet$0
augroup END
endsnippet

snippet __lsp_autoformat_on_save "Template for LSP autoformat on save" b
augroup LspFormatting
	autocmd! * <buffer>
	autocmd BufWritePre <buffer> lua vim.lsp.buf.format({timeout_ms=5000})
augroup END
endsnippet

snippet __db_ui "Connection settings for vim-dadbod-ui" b
" :h dadbod
let g:dbs = [
\ { "name": "dev-pg", "url": "postgres://postgres:password@localhost:5432/db"},
\ { "name": "dev-mysql", "url": "mysql://mysql:password@127.0.0.1:3306/db?default-character-set=utf8"}
\ ]
endsnippet

snippet __dap_python "DAP project configuration" b
LUA
lua << LUA
require('dap').configurations.python = {
	{
		type = 'python',
		request = 'launch',
		name = 'Launch current',
		program = '${file}', -- current file
		pythonPath = os.getenv('VIRTUAL_ENV') .. '/bin/python'
	}
}
LUA
endsnippet
